{"ast":null,"code":"var _jsxFileName = \"/workspaces/Quizdiezweite/music-quiz/client/src/components/SongQuiz.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongQuiz = ({\n  accessToken,\n  playlistId,\n  deviceId\n}) => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n  useEffect(() => {\n    const fetchTracks = async () => {\n      const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await res.json();\n      const tracks = data.items.map(item => ({\n        id: item.track.id,\n        uri: item.track.uri,\n        name: item.track.name\n      })).filter(track => track.id);\n      setSongs(tracks);\n      startNewRound(tracks);\n    };\n    if (playlistId) fetchTracks();\n  }, [playlistId]);\n  const startNewRound = tracks => {\n    const shuffled = [...tracks].sort(() => 0.5 - Math.random());\n    setCurrentSong(shuffled[0]);\n    setOptions(shuffled.slice(0, 4));\n  };\n  const playSong = async () => {\n    if (!deviceId || !currentSong) return;\n    await fetch(\"https://api.spotify.com/v1/me/player/play\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        device_id: deviceId,\n        uris: [currentSong.uri]\n      })\n    });\n  };\n  useEffect(() => {\n    if (currentSong) playSong();\n  }, [currentSong]);\n  const checkAnswer = selectedTrack => {\n    if (selectedTrack.id === currentSong.id) {\n      setFeedback(\"✅ Richtig!\");\n    } else {\n      setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);\n    }\n    setTimeout(() => startNewRound(songs), 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Errate den Song! \\uD83C\\uDFB5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), options.map(track => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => checkAnswer(track),\n      className: \"quiz-button\",\n      children: track.name\n    }, track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(SongQuiz, \"4lFFtuvWXW2tYrYrm+8EmitQjvQ=\");\n_c = SongQuiz;\nexport default SongQuiz;\nvar _c;\n$RefreshReg$(_c, \"SongQuiz\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SongQuiz","accessToken","playlistId","deviceId","_s","songs","setSongs","currentSong","setCurrentSong","options","setOptions","feedback","setFeedback","fetchTracks","res","fetch","headers","Authorization","data","json","tracks","items","map","item","id","track","uri","name","filter","startNewRound","shuffled","sort","Math","random","slice","playSong","method","body","JSON","stringify","device_id","uris","checkAnswer","selectedTrack","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Quizdiezweite/music-quiz/client/src/components/SongQuiz.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst SongQuiz = ({ accessToken, playlistId, deviceId }) => {\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      });\n      const data = await res.json();\n      const tracks = data.items\n        .map((item) => ({\n          id: item.track.id,\n          uri: item.track.uri,\n          name: item.track.name,\n        }))\n        .filter((track) => track.id);\n      setSongs(tracks);\n      startNewRound(tracks);\n    };\n\n    if (playlistId) fetchTracks();\n  }, [playlistId]);\n\n  const startNewRound = (tracks) => {\n    const shuffled = [...tracks].sort(() => 0.5 - Math.random());\n    setCurrentSong(shuffled[0]);\n    setOptions(shuffled.slice(0, 4));\n  };\n\n  const playSong = async () => {\n    if (!deviceId || !currentSong) return;\n    await fetch(\"https://api.spotify.com/v1/me/player/play\", {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${accessToken}`, \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ device_id: deviceId, uris: [currentSong.uri] }),\n    });\n  };\n\n  useEffect(() => {\n    if (currentSong) playSong();\n  }, [currentSong]);\n\n  const checkAnswer = (selectedTrack) => {\n    if (selectedTrack.id === currentSong.id) {\n      setFeedback(\"✅ Richtig!\");\n    } else {\n      setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);\n    }\n    setTimeout(() => startNewRound(songs), 2000);\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>Errate den Song! 🎵</h2>\n      <p>{feedback}</p>\n      {options.map((track) => (\n        <button key={track.id} onClick={() => checkAnswer(track)} className=\"quiz-button\">\n          {track.name}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default SongQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}