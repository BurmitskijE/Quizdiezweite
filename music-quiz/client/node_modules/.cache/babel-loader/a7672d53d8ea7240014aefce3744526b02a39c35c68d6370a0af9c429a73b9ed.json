{"ast":null,"code":"import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const SpotifyPlayer=_ref=>{let{accessToken,onReady}=_ref;const[player,setPlayer]=useState(null);const[deviceId,setDeviceId]=useState(null);useEffect(()=>{if(!accessToken)return;const script=document.createElement(\"script\");script.src=\"https://sdk.scdn.co/spotify-player.js\";script.async=true;document.body.appendChild(script);window.onSpotifyWebPlaybackSDKReady=()=>{const newPlayer=new window.Spotify.Player({name:\"Song Quiz Player\",getOAuthToken:cb=>cb(accessToken),volume:0.5});newPlayer.addListener(\"ready\",async _ref2=>{let{device_id}=_ref2;console.log(\"‚úÖ Spotify Player ist bereit mit ID:\",device_id);setDeviceId(device_id);onReady(device_id);await activateDevice(device_id);// Ger√§t aktivieren\n});newPlayer.addListener(\"not_ready\",_ref3=>{let{device_id}=_ref3;console.error(\"‚ùå Spotify Player ist nicht bereit!\",device_id);});newPlayer.connect().then(success=>{if(success){console.log(\"üéµ Spotify Player erfolgreich verbunden!\");}else{console.error(\"‚ùå Verbindung zum Spotify Player fehlgeschlagen!\");}});setPlayer(newPlayer);};},[accessToken]);const activateDevice=async deviceId=>{try{console.log(\"üîÑ Ger√§t aktivieren:\",deviceId);const res=await fetch(\"https://api.spotify.com/v1/me/player\",{method:\"PUT\",headers:{Authorization:`Bearer ${accessToken}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({device_ids:[deviceId],play:false})});if(!res.ok){console.error(\"‚ùå Fehler beim Aktivieren des Players:\",await res.text());}else{console.log(\"‚úÖ Ger√§t erfolgreich als Spotify-Wiedergabeger√§t gesetzt.\");}}catch(error){console.error(\"‚ùå Fehler beim Aktivieren des Spotify-Ger√§ts:\",error);}};return/*#__PURE__*/_jsx(\"p\",{children:deviceId?\"Player bereit! üéµ\":\"Lade Spotify Player...\"});};export default SpotifyPlayer;","map":{"version":3,"names":["useEffect","useState","jsx","_jsx","SpotifyPlayer","_ref","accessToken","onReady","player","setPlayer","deviceId","setDeviceId","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","newPlayer","Spotify","Player","name","getOAuthToken","cb","volume","addListener","_ref2","device_id","console","log","activateDevice","_ref3","error","connect","then","success","res","fetch","method","headers","Authorization","JSON","stringify","device_ids","play","ok","text","children"],"sources":["/workspaces/Quizdiezweite/music-quiz/client/src/components/SpotifyPlayer.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst SpotifyPlayer = ({ accessToken, onReady }) => {\n  const [player, setPlayer] = useState(null);\n  const [deviceId, setDeviceId] = useState(null);\n\n  useEffect(() => {\n    if (!accessToken) return;\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const newPlayer = new window.Spotify.Player({\n        name: \"Song Quiz Player\",\n        getOAuthToken: (cb) => cb(accessToken),\n        volume: 0.5,\n      });\n\n      newPlayer.addListener(\"ready\", async ({ device_id }) => {\n        console.log(\"‚úÖ Spotify Player ist bereit mit ID:\", device_id);\n        setDeviceId(device_id);\n        onReady(device_id);\n        await activateDevice(device_id); // Ger√§t aktivieren\n      });\n\n      newPlayer.addListener(\"not_ready\", ({ device_id }) => {\n        console.error(\"‚ùå Spotify Player ist nicht bereit!\", device_id);\n      });\n\n      newPlayer.connect().then((success) => {\n        if (success) {\n          console.log(\"üéµ Spotify Player erfolgreich verbunden!\");\n        } else {\n          console.error(\"‚ùå Verbindung zum Spotify Player fehlgeschlagen!\");\n        }\n      });\n\n      setPlayer(newPlayer);\n    };\n  }, [accessToken]);\n\n  const activateDevice = async (deviceId) => {\n    try {\n      console.log(\"üîÑ Ger√§t aktivieren:\", deviceId);\n  \n      const res = await fetch(\"https://api.spotify.com/v1/me/player\", {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ device_ids: [deviceId], play: false }),\n      });\n  \n      if (!res.ok) {\n        console.error(\"‚ùå Fehler beim Aktivieren des Players:\", await res.text());\n      } else {\n        console.log(\"‚úÖ Ger√§t erfolgreich als Spotify-Wiedergabeger√§t gesetzt.\");\n      }\n    } catch (error) {\n      console.error(\"‚ùå Fehler beim Aktivieren des Spotify-Ger√§ts:\", error);\n    }\n  };\n\n  return <p>{deviceId ? \"Player bereit! üéµ\" : \"Lade Spotify Player...\"}</p>;\n};\n\n\nexport default SpotifyPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}