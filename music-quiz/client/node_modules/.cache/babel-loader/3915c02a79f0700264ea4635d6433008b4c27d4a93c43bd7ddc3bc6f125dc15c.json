{"ast":null,"code":"import{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import\"../styles/styles.css\";import\"../styles/animations.css\";// 🔥 Animationen importieren\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const SongQuiz=_ref=>{let{accessToken,playlistId,deviceId}=_ref;const[songs,setSongs]=useState([]);const[currentSong,setCurrentSong]=useState(null);const[options,setOptions]=useState([]);const[feedback,setFeedback]=useState(\"\");const[blurLevel,setBlurLevel]=useState(10);// 🔥 Startet mit starkem Blur\nconst navigate=useNavigate();let timeoutId;// Speichert den Timer für den 15-Sekunden-Countdown\n// 🎵 1️⃣ Playlist-Songs abrufen\nuseEffect(()=>{const fetchTracks=async()=>{if(!playlistId)return;const res=await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`,{headers:{Authorization:`Bearer ${accessToken}`}});const data=await res.json();const tracks=data.items.filter(item=>item.track)// Falls `item.track` null ist, überspringen\n.map(item=>({id:item.track.id,uri:item.track.uri,name:item.track.name,albumCover:item.track.album.images[0].url,// 🔥 Album Cover hinzufügen\nduration_ms:item.track.duration_ms||180000}));setSongs(tracks);startNewRound(tracks);};fetchTracks();},[playlistId]);// 🎵 2️⃣ Neues Lied starten\nconst startNewRound=tracks=>{if(tracks.length===0)return;const shuffled=[...tracks].sort(()=>0.5-Math.random());setCurrentSong(shuffled[0]);setOptions(shuffled.slice(0,4));setBlurLevel(10);// 🔥 Album Cover wieder unscharf setzen\n};// 🎵 3️⃣ Zufällige 15 Sekunden abspielen\nconst playRandomPart=async()=>{if(!deviceId||!currentSong)return;const randomStartMs=Math.floor(Math.random()*(currentSong.duration_ms-15000));console.log(`🎵 Starte Song für 15 Sekunden ab: ${randomStartMs}ms`);// 🔥 KICKSTART: Player aktivieren, falls er \"hängt\"\nawait fetch(\"https://api.spotify.com/v1/me/player\",{method:\"PUT\",headers:{Authorization:`Bearer ${accessToken}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({device_ids:[deviceId],play:false})});// 🔥 Startet den Song nach dem Kickstart\nawait fetch(\"https://api.spotify.com/v1/me/player/play\",{method:\"PUT\",headers:{Authorization:`Bearer ${accessToken}`,\"Content-Type\":\"application/json\"},body:JSON.stringify({uris:[currentSong.uri],position_ms:randomStartMs})});// Startet den Timer für 15 Sekunden\nlet blurStep=10;timeoutId=setInterval(()=>{blurStep-=1;setBlurLevel(blurStep);if(blurStep<=0)clearInterval(timeoutId);},1500);setTimeout(()=>{stopPlayback();setFeedback(`⏳ Zeit abgelaufen! Richtige Antwort: ${currentSong.name}`);setTimeout(()=>startNewRound(songs),3000);},15000);};// 🎵 4️⃣ Wiedergabe stoppen\nconst stopPlayback=async()=>{await fetch(\"https://api.spotify.com/v1/me/player/pause\",{method:\"PUT\",headers:{Authorization:`Bearer ${accessToken}`}});};// 🎵 5️⃣ Automatisch Song starten\nuseEffect(()=>{if(currentSong)playRandomPart();},[currentSong]);// 🎵 6️⃣ Antwort prüfen\nconst checkAnswer=selectedTrack=>{clearTimeout(timeoutId);// 🔥 Timer stoppen, falls das Lied erraten wurde\nif(selectedTrack.id===currentSong.id){setFeedback(\"✅ Richtig!\");document.body.classList.add(\"correct-answer\");setTimeout(()=>document.body.classList.remove(\"correct-answer\"),1000);}else{setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);document.body.classList.add(\"wrong-answer\");setTimeout(()=>document.body.classList.remove(\"wrong-answer\"),1000);}setTimeout(()=>startNewRound(songs),2000);};// 🎵 7️⃣ Zurück zur Übersicht\nconst handleBack=()=>{stopPlayback();navigate(\"/\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-bar\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"login-status\",children:[\"Eingeloggt als: \",accessToken.substring(0,10),\"...\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,className:\"back-button\",children:\"\\u2B05 Zur\\xFCck zur \\xDCbersicht\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Errate den Song! \\uD83C\\uDFB5\"}),/*#__PURE__*/_jsx(\"div\",{className:\"album-cover\",style:{filter:`blur(${blurLevel}px)`},children:/*#__PURE__*/_jsx(\"img\",{src:currentSong===null||currentSong===void 0?void 0:currentSong.albumCover,alt:\"Album Cover\"})}),/*#__PURE__*/_jsx(\"p\",{children:feedback}),/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:options.map(track=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>checkAnswer(track),className:\"quiz-button\",children:track.name},track.id))})]});};export default SongQuiz;","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxs","_jsxs","jsx","_jsx","SongQuiz","_ref","accessToken","playlistId","deviceId","songs","setSongs","currentSong","setCurrentSong","options","setOptions","feedback","setFeedback","blurLevel","setBlurLevel","navigate","timeoutId","fetchTracks","res","fetch","headers","Authorization","data","json","tracks","items","filter","item","track","map","id","uri","name","albumCover","album","images","url","duration_ms","startNewRound","length","shuffled","sort","Math","random","slice","playRandomPart","randomStartMs","floor","console","log","method","body","JSON","stringify","device_ids","play","uris","position_ms","blurStep","setInterval","clearInterval","setTimeout","stopPlayback","checkAnswer","selectedTrack","clearTimeout","document","classList","add","remove","handleBack","className","children","substring","onClick","style","src","alt"],"sources":["/workspaces/Quizdiezweite/music-quiz/client/src/components/SongQuiz.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/styles.css\";\nimport \"../styles/animations.css\"; // 🔥 Animationen importieren\n\nconst SongQuiz = ({ accessToken, playlistId, deviceId }) => {\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n  const [blurLevel, setBlurLevel] = useState(10); // 🔥 Startet mit starkem Blur\n  const navigate = useNavigate();\n  let timeoutId; // Speichert den Timer für den 15-Sekunden-Countdown\n\n  // 🎵 1️⃣ Playlist-Songs abrufen\n  useEffect(() => {\n    const fetchTracks = async () => {\n      if (!playlistId) return;\n\n      const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      });\n      const data = await res.json();\n\n      const tracks = data.items\n        .filter((item) => item.track) // Falls `item.track` null ist, überspringen\n        .map((item) => ({\n          id: item.track.id,\n          uri: item.track.uri,\n          name: item.track.name,\n          albumCover: item.track.album.images[0].url, // 🔥 Album Cover hinzufügen\n          duration_ms: item.track.duration_ms || 180000,\n        }));\n\n      setSongs(tracks);\n      startNewRound(tracks);\n    };\n\n    fetchTracks();\n  }, [playlistId]);\n\n  // 🎵 2️⃣ Neues Lied starten\n  const startNewRound = (tracks) => {\n    if (tracks.length === 0) return;\n\n    const shuffled = [...tracks].sort(() => 0.5 - Math.random());\n    setCurrentSong(shuffled[0]);\n    setOptions(shuffled.slice(0, 4));\n    setBlurLevel(10); // 🔥 Album Cover wieder unscharf setzen\n  };\n\n  // 🎵 3️⃣ Zufällige 15 Sekunden abspielen\n  const playRandomPart = async () => {\n    if (!deviceId || !currentSong) return;\n\n    const randomStartMs = Math.floor(Math.random() * (currentSong.duration_ms - 15000));\n    console.log(`🎵 Starte Song für 15 Sekunden ab: ${randomStartMs}ms`);\n\n    // 🔥 KICKSTART: Player aktivieren, falls er \"hängt\"\n    await fetch(\"https://api.spotify.com/v1/me/player\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ device_ids: [deviceId], play: false }),\n    });\n\n    // 🔥 Startet den Song nach dem Kickstart\n    await fetch(\"https://api.spotify.com/v1/me/player/play\", {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${accessToken}`, \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ uris: [currentSong.uri], position_ms: randomStartMs }),\n    });\n\n    // Startet den Timer für 15 Sekunden\n    let blurStep = 10;\n    timeoutId = setInterval(() => {\n      blurStep -= 1;\n      setBlurLevel(blurStep);\n      if (blurStep <= 0) clearInterval(timeoutId);\n    }, 1500);\n\n    setTimeout(() => {\n      stopPlayback();\n      setFeedback(`⏳ Zeit abgelaufen! Richtige Antwort: ${currentSong.name}`);\n      setTimeout(() => startNewRound(songs), 3000);\n    }, 15000);\n  };\n\n  // 🎵 4️⃣ Wiedergabe stoppen\n  const stopPlayback = async () => {\n    await fetch(\"https://api.spotify.com/v1/me/player/pause\", {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${accessToken}` },\n    });\n  };\n\n  // 🎵 5️⃣ Automatisch Song starten\n  useEffect(() => {\n    if (currentSong) playRandomPart();\n  }, [currentSong]);\n\n  // 🎵 6️⃣ Antwort prüfen\n  const checkAnswer = (selectedTrack) => {\n    clearTimeout(timeoutId); // 🔥 Timer stoppen, falls das Lied erraten wurde\n    \n    if (selectedTrack.id === currentSong.id) {\n      setFeedback(\"✅ Richtig!\");\n      document.body.classList.add(\"correct-answer\");\n      setTimeout(() => document.body.classList.remove(\"correct-answer\"), 1000);\n    } else {\n      setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);\n      document.body.classList.add(\"wrong-answer\");\n      setTimeout(() => document.body.classList.remove(\"wrong-answer\"), 1000);\n    }\n\n    setTimeout(() => startNewRound(songs), 2000);\n  };\n\n  // 🎵 7️⃣ Zurück zur Übersicht\n  const handleBack = () => {\n    stopPlayback();\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"top-bar\">\n        <p className=\"login-status\">Eingeloggt als: {accessToken.substring(0, 10)}...</p>\n        <button onClick={handleBack} className=\"back-button\">\n          ⬅ Zurück zur Übersicht\n        </button>\n      </div>\n      <h2>Errate den Song! 🎵</h2>\n      <div className=\"album-cover\" style={{ filter: `blur(${blurLevel}px)` }}>\n        <img src={currentSong?.albumCover} alt=\"Album Cover\" />\n      </div>\n      <p>{feedback}</p>\n      <div className=\"options-container\">\n        {options.map((track) => (\n          <button key={track.id} onClick={() => checkAnswer(track)} className=\"quiz-button\">\n            {track.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SongQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}