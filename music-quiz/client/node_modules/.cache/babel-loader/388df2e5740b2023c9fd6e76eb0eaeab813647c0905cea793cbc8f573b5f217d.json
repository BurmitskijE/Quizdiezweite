{"ast":null,"code":"var _jsxFileName = \"/workspaces/Quizdiezweite/music-quiz/client/src/components/SongQuiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongQuiz = ({\n  accessToken,\n  playlistId,\n  deviceId\n}) => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n  useEffect(() => {\n    const fetchTracks = async () => {\n      if (!playlistId) return;\n      const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await res.json();\n      const tracks = data.items.filter(item => item.track) // 🔥 Falls `item.track` null ist, überspringen\n      .map(item => ({\n        id: item.track.id,\n        uri: item.track.uri,\n        name: item.track.name,\n        duration_ms: item.track.duration_ms || 180000 // Falls nicht verfügbar, Standardwert 3 Min.\n      }));\n      setSongs(tracks);\n      startNewRound(tracks);\n    };\n    fetchTracks();\n  }, [playlistId]);\n  const startNewRound = tracks => {\n    if (tracks.length === 0) return;\n    const shuffled = [...tracks].sort(() => 0.5 - Math.random());\n    setCurrentSong(shuffled[0]);\n    setOptions(shuffled.slice(0, 4));\n  };\n  const playRandomPart = async () => {\n    if (!deviceId || !currentSong) return;\n    const randomStartMs = Math.floor(Math.random() * (currentSong.duration_ms - 15000));\n    console.log(`🎵 Starte Song für 15 Sekunden ab: ${randomStartMs}ms`);\n    await fetch(\"https://api.spotify.com/v1/me/player/play\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        uris: [currentSong.uri],\n        position_ms: randomStartMs\n      })\n    });\n    setTimeout(() => {\n      stopPlayback();\n      setFeedback(`⏳ Zeit abgelaufen! Richtige Antwort: ${currentSong.name}`);\n      setTimeout(() => startNewRound(songs), 3000);\n    }, 15000);\n  };\n  const stopPlayback = async () => {\n    await fetch(\"https://api.spotify.com/v1/me/player/pause\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n  };\n  useEffect(() => {\n    if (currentSong) playRandomPart();\n  }, [currentSong]);\n  const checkAnswer = selectedTrack => {\n    if (selectedTrack.id === currentSong.id) {\n      setFeedback(\"✅ Richtig!\");\n    } else {\n      setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);\n    }\n    setTimeout(() => startNewRound(songs), 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Errate den Song! \\uD83C\\uDFB5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), options.map(track => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => checkAnswer(track),\n      className: \"quiz-button\",\n      children: track.name\n    }, track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(SongQuiz, \"4lFFtuvWXW2tYrYrm+8EmitQjvQ=\");\n_c = SongQuiz;\nexport default SongQuiz;\nvar _c;\n$RefreshReg$(_c, \"SongQuiz\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","SongQuiz","accessToken","playlistId","deviceId","_s","songs","setSongs","currentSong","setCurrentSong","options","setOptions","feedback","setFeedback","fetchTracks","res","fetch","headers","Authorization","data","json","tracks","items","filter","item","track","map","id","uri","name","duration_ms","startNewRound","length","shuffled","sort","Math","random","slice","playRandomPart","randomStartMs","floor","console","log","method","body","JSON","stringify","uris","position_ms","setTimeout","stopPlayback","checkAnswer","selectedTrack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Quizdiezweite/music-quiz/client/src/components/SongQuiz.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SongQuiz = ({ accessToken, playlistId, deviceId }) => {\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n\n  useEffect(() => {\n    const fetchTracks = async () => {\n      if (!playlistId) return;\n\n      const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      });\n      const data = await res.json();\n\n      const tracks = data.items\n        .filter((item) => item.track) // 🔥 Falls `item.track` null ist, überspringen\n        .map((item) => ({\n          id: item.track.id,\n          uri: item.track.uri,\n          name: item.track.name,\n          duration_ms: item.track.duration_ms || 180000, // Falls nicht verfügbar, Standardwert 3 Min.\n        }));\n\n      setSongs(tracks);\n      startNewRound(tracks);\n    };\n\n    fetchTracks();\n  }, [playlistId]);\n\n  const startNewRound = (tracks) => {\n    if (tracks.length === 0) return;\n\n    const shuffled = [...tracks].sort(() => 0.5 - Math.random());\n    setCurrentSong(shuffled[0]);\n    setOptions(shuffled.slice(0, 4));\n  };\n\n  const playRandomPart = async () => {\n    if (!deviceId || !currentSong) return;\n\n    const randomStartMs = Math.floor(Math.random() * (currentSong.duration_ms - 15000));\n    console.log(`🎵 Starte Song für 15 Sekunden ab: ${randomStartMs}ms`);\n\n    await fetch(\"https://api.spotify.com/v1/me/player/play\", {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${accessToken}`, \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ uris: [currentSong.uri], position_ms: randomStartMs }),\n    });\n\n    setTimeout(() => {\n      stopPlayback();\n      setFeedback(`⏳ Zeit abgelaufen! Richtige Antwort: ${currentSong.name}`);\n      setTimeout(() => startNewRound(songs), 3000);\n    }, 15000);\n  };\n\n  const stopPlayback = async () => {\n    await fetch(\"https://api.spotify.com/v1/me/player/pause\", {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${accessToken}` },\n    });\n  };\n\n  useEffect(() => {\n    if (currentSong) playRandomPart();\n  }, [currentSong]);\n\n  const checkAnswer = (selectedTrack) => {\n    if (selectedTrack.id === currentSong.id) {\n      setFeedback(\"✅ Richtig!\");\n    } else {\n      setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);\n    }\n    setTimeout(() => startNewRound(songs), 2000);\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>Errate den Song! 🎵</h2>\n      <p>{feedback}</p>\n      {options.map((track) => (\n        <button key={track.id} onClick={() => checkAnswer(track)} className=\"quiz-button\">\n          {track.name}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default SongQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}