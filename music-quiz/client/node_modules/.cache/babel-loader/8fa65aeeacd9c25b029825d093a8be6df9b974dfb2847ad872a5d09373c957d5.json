{"ast":null,"code":"var _jsxFileName = \"/workspaces/Quizdiezweite/music-quiz/client/src/components/SongQuiz.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/styles.css\";\nimport \"../styles/animation.css\"; // 🔥 Animationen importieren\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongQuiz = ({\n  accessToken,\n  playlistId,\n  deviceId\n}) => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n  const [blurLevel, setBlurLevel] = useState(10); // 🔥 Startet mit starkem Blur\n  const navigate = useNavigate();\n  let timeoutId; // Speichert den Timer für den 15-Sekunden-Countdown\n\n  // 🎵 1️⃣ Playlist-Songs abrufen\n  useEffect(() => {\n    const fetchTracks = async () => {\n      if (!playlistId) return;\n      const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      const data = await res.json();\n      const tracks = data.items.filter(item => item.track) // Falls `item.track` null ist, überspringen\n      .map(item => ({\n        id: item.track.id,\n        uri: item.track.uri,\n        name: item.track.name,\n        albumCover: item.track.album.images[0].url,\n        // 🔥 Album Cover hinzufügen\n        duration_ms: item.track.duration_ms || 180000\n      }));\n      setSongs(tracks);\n      startNewRound(tracks);\n    };\n    fetchTracks();\n  }, [playlistId]);\n\n  // 🎵 2️⃣ Neues Lied starten\n  const startNewRound = tracks => {\n    if (tracks.length === 0) return;\n    const shuffled = [...tracks].sort(() => 0.5 - Math.random());\n    setCurrentSong(shuffled[0]);\n    setOptions(shuffled.slice(0, 4));\n    setBlurLevel(10); // 🔥 Album Cover wieder unscharf setzen\n  };\n\n  // 🎵 3️⃣ Zufällige 15 Sekunden abspielen\n  const playRandomPart = async () => {\n    if (!deviceId || !currentSong) return;\n    const randomStartMs = Math.floor(Math.random() * (currentSong.duration_ms - 15000));\n    console.log(`🎵 Starte Song für 15 Sekunden ab: ${randomStartMs}ms`);\n\n    // 🔥 KICKSTART: Player aktivieren, falls er \"hängt\"\n    await fetch(\"https://api.spotify.com/v1/me/player\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        device_ids: [deviceId],\n        play: false\n      })\n    });\n\n    // 🔥 Startet den Song nach dem Kickstart\n    await fetch(\"https://api.spotify.com/v1/me/player/play\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        uris: [currentSong.uri],\n        position_ms: randomStartMs\n      })\n    });\n\n    // Startet den Timer für 15 Sekunden\n    let blurStep = 10;\n    timeoutId = setInterval(() => {\n      blurStep -= 1;\n      setBlurLevel(blurStep);\n      if (blurStep <= 0) clearInterval(timeoutId);\n    }, 1500);\n    setTimeout(() => {\n      stopPlayback();\n      setFeedback(`⏳ Zeit abgelaufen! Richtige Antwort: ${currentSong.name}`);\n      setTimeout(() => startNewRound(songs), 3000);\n    }, 15000);\n  };\n\n  // 🎵 4️⃣ Wiedergabe stoppen\n  const stopPlayback = async () => {\n    await fetch(\"https://api.spotify.com/v1/me/player/pause\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n  };\n\n  // 🎵 5️⃣ Automatisch Song starten\n  useEffect(() => {\n    if (currentSong) playRandomPart();\n  }, [currentSong]);\n\n  // 🎵 6️⃣ Antwort prüfen\n  const checkAnswer = selectedTrack => {\n    clearTimeout(timeoutId); // 🔥 Timer stoppen, falls das Lied erraten wurde\n\n    if (selectedTrack.id === currentSong.id) {\n      setFeedback(\"✅ Richtig!\");\n      document.body.classList.add(\"correct-answer\");\n      setTimeout(() => document.body.classList.remove(\"correct-answer\"), 1000);\n    } else {\n      setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);\n      document.body.classList.add(\"wrong-answer\");\n      setTimeout(() => document.body.classList.remove(\"wrong-answer\"), 1000);\n    }\n    setTimeout(() => startNewRound(songs), 2000);\n  };\n\n  // 🎵 7️⃣ Zurück zur Übersicht\n  const handleBack = () => {\n    stopPlayback();\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-status\",\n        children: [\"Eingeloggt als: \", accessToken.substring(0, 10), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"back-button\",\n        children: \"\\u2B05 Zur\\xFCck zur \\xDCbersicht\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Errate den Song! \\uD83C\\uDFB5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-cover\",\n      style: {\n        filter: `blur(${blurLevel}px)`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentSong === null || currentSong === void 0 ? void 0 : currentSong.albumCover,\n        alt: \"Album Cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: options.map(track => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => checkAnswer(track),\n        className: \"quiz-button\",\n        children: track.name\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(SongQuiz, \"CueMfDeRJNp25XqOoTjRC9pjd8Y=\", false, function () {\n  return [useNavigate];\n});\n_c = SongQuiz;\nexport default SongQuiz;\nvar _c;\n$RefreshReg$(_c, \"SongQuiz\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SongQuiz","accessToken","playlistId","deviceId","_s","songs","setSongs","currentSong","setCurrentSong","options","setOptions","feedback","setFeedback","blurLevel","setBlurLevel","navigate","timeoutId","fetchTracks","res","fetch","headers","Authorization","data","json","tracks","items","filter","item","track","map","id","uri","name","albumCover","album","images","url","duration_ms","startNewRound","length","shuffled","sort","Math","random","slice","playRandomPart","randomStartMs","floor","console","log","method","body","JSON","stringify","device_ids","play","uris","position_ms","blurStep","setInterval","clearInterval","setTimeout","stopPlayback","checkAnswer","selectedTrack","clearTimeout","document","classList","add","remove","handleBack","className","children","substring","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","src","alt","_c","$RefreshReg$"],"sources":["/workspaces/Quizdiezweite/music-quiz/client/src/components/SongQuiz.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/styles.css\";\nimport \"../styles/animation.css\"; // 🔥 Animationen importieren\n\nconst SongQuiz = ({ accessToken, playlistId, deviceId }) => {\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [feedback, setFeedback] = useState(\"\");\n  const [blurLevel, setBlurLevel] = useState(10); // 🔥 Startet mit starkem Blur\n  const navigate = useNavigate();\n  let timeoutId; // Speichert den Timer für den 15-Sekunden-Countdown\n\n  // 🎵 1️⃣ Playlist-Songs abrufen\n  useEffect(() => {\n    const fetchTracks = async () => {\n      if (!playlistId) return;\n\n      const res = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      });\n      const data = await res.json();\n\n      const tracks = data.items\n        .filter((item) => item.track) // Falls `item.track` null ist, überspringen\n        .map((item) => ({\n          id: item.track.id,\n          uri: item.track.uri,\n          name: item.track.name,\n          albumCover: item.track.album.images[0].url, // 🔥 Album Cover hinzufügen\n          duration_ms: item.track.duration_ms || 180000,\n        }));\n\n      setSongs(tracks);\n      startNewRound(tracks);\n    };\n\n    fetchTracks();\n  }, [playlistId]);\n\n  // 🎵 2️⃣ Neues Lied starten\n  const startNewRound = (tracks) => {\n    if (tracks.length === 0) return;\n\n    const shuffled = [...tracks].sort(() => 0.5 - Math.random());\n    setCurrentSong(shuffled[0]);\n    setOptions(shuffled.slice(0, 4));\n    setBlurLevel(10); // 🔥 Album Cover wieder unscharf setzen\n  };\n\n  // 🎵 3️⃣ Zufällige 15 Sekunden abspielen\n  const playRandomPart = async () => {\n    if (!deviceId || !currentSong) return;\n\n    const randomStartMs = Math.floor(Math.random() * (currentSong.duration_ms - 15000));\n    console.log(`🎵 Starte Song für 15 Sekunden ab: ${randomStartMs}ms`);\n\n    // 🔥 KICKSTART: Player aktivieren, falls er \"hängt\"\n    await fetch(\"https://api.spotify.com/v1/me/player\", {\n      method: \"PUT\",\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ device_ids: [deviceId], play: false }),\n    });\n\n    // 🔥 Startet den Song nach dem Kickstart\n    await fetch(\"https://api.spotify.com/v1/me/player/play\", {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${accessToken}`, \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ uris: [currentSong.uri], position_ms: randomStartMs }),\n    });\n\n    // Startet den Timer für 15 Sekunden\n    let blurStep = 10;\n    timeoutId = setInterval(() => {\n      blurStep -= 1;\n      setBlurLevel(blurStep);\n      if (blurStep <= 0) clearInterval(timeoutId);\n    }, 1500);\n\n    setTimeout(() => {\n      stopPlayback();\n      setFeedback(`⏳ Zeit abgelaufen! Richtige Antwort: ${currentSong.name}`);\n      setTimeout(() => startNewRound(songs), 3000);\n    }, 15000);\n  };\n\n  // 🎵 4️⃣ Wiedergabe stoppen\n  const stopPlayback = async () => {\n    await fetch(\"https://api.spotify.com/v1/me/player/pause\", {\n      method: \"PUT\",\n      headers: { Authorization: `Bearer ${accessToken}` },\n    });\n  };\n\n  // 🎵 5️⃣ Automatisch Song starten\n  useEffect(() => {\n    if (currentSong) playRandomPart();\n  }, [currentSong]);\n\n  // 🎵 6️⃣ Antwort prüfen\n  const checkAnswer = (selectedTrack) => {\n    clearTimeout(timeoutId); // 🔥 Timer stoppen, falls das Lied erraten wurde\n    \n    if (selectedTrack.id === currentSong.id) {\n      setFeedback(\"✅ Richtig!\");\n      document.body.classList.add(\"correct-answer\");\n      setTimeout(() => document.body.classList.remove(\"correct-answer\"), 1000);\n    } else {\n      setFeedback(`❌ Falsch! Richtig wäre: ${currentSong.name}`);\n      document.body.classList.add(\"wrong-answer\");\n      setTimeout(() => document.body.classList.remove(\"wrong-answer\"), 1000);\n    }\n\n    setTimeout(() => startNewRound(songs), 2000);\n  };\n\n  // 🎵 7️⃣ Zurück zur Übersicht\n  const handleBack = () => {\n    stopPlayback();\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"top-bar\">\n        <p className=\"login-status\">Eingeloggt als: {accessToken.substring(0, 10)}...</p>\n        <button onClick={handleBack} className=\"back-button\">\n          ⬅ Zurück zur Übersicht\n        </button>\n      </div>\n      <h2>Errate den Song! 🎵</h2>\n      <div className=\"album-cover\" style={{ filter: `blur(${blurLevel}px)` }}>\n        <img src={currentSong?.albumCover} alt=\"Album Cover\" />\n      </div>\n      <p>{feedback}</p>\n      <div className=\"options-container\">\n        {options.map((track) => (\n          <button key={track.id} onClick={() => checkAnswer(track)} className=\"quiz-button\">\n            {track.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SongQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}